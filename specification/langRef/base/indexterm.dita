<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="indexterm" xml:lang="en-us">
<title><xmlelement>indexterm</xmlelement></title>
<shortdesc>An <xmlelement>indexterm</xmlelement> element contains content that is used to produce an
    index entry in a generated index. Nested <xmlelement>indexterm</xmlelement> elements create
    multi-level indexes.</shortdesc>
<prolog><metadata>
      <keywords>
        <indexterm>elements<indexterm>indexing<indexterm><xmlelement>indexterm</xmlelement></indexterm></indexterm></indexterm>
      <indexterm>carp
  <index-see-also>goldfish</index-see-also>
</indexterm>
      </keywords>
    </metadata></prolog>
<refbody>
    <section id="rendering-expectations">
      <title>Rendering expectations</title>
      <p>The content of <xmlatt>indexterm</xmlatt> entries is not rendered in the flow of body text;
        it is rendered only as part of a generated index.</p>
    </section>
    <!--<section id="processing-expectations"><title>Processing expectations</title><p>It is an error if an <xmlelement>indexterm</xmlelement> that contains <xmlelement>indexterm</xmlelement> children contains both an <xmlelement>index-see</xmlelement> and an <xmlelement>index-see-also</xmlelement> element. In the case of this error condition, an implementation <term outputclass="RFC-2119">MAY</term> give an error message; it <term outputclass="RFC-2119">MAY</term> recover by treating all such <xmlelement>index-see</xmlelement> elements as <xmlelement>index-see-also</xmlelement> elements.</p></section>-->
    <section id="attributes">
      <title>Attributes</title>
      <p>The following attributes are available on this element: <xref
          keyref="attributes-universal"/>, <xref
          keyref="attributes-keyref"><xmlatt>keyref</xmlatt></xref>, and the
        attributes defined below.</p>
      <dl>
        <dlentry id="start">
          <dt><xmlatt>start</xmlatt></dt>
          <dd>Specifies an identifier that indicates the start of an index
            range.<!--<draft-comment author="Eliot Kimber">Specifies a string that serves as the identifier for the start of an index range. </draft-comment>--></dd>
        </dlentry>
        <dlentry id="end">
          <dt><xmlatt>end</xmlatt></dt>
          <dd>Specifies an identifier that indicates the end of an index
            range.<!-- is indicated by whichever comes first of the following:<draft-comment author="Eliot Kimber">Specifies a value to be matched against an earlier @start value to indicate that this index term is the end of the index range.</draft-comment><ul><li>Applicable scope boundary</li><li>An <xmlelement>indexterm</xmlelement> element with an <xmlatt>end</xmlatt> attribute with a value that matches that <xmlatt>start</xmlatt> attribute that began the index range<draft-comment author="Eliot Kimber">This is giving the general rule for determining the end of a range. That rule is already stated elsewhere and shouldn't be repeated here.</draft-comment></li></ul>--></dd>
        </dlentry>
      </dl>
    </section>
<example id="example" otherprops="examples"><title>Examples</title>
      <p>This section contains examples of how <xmlelement>indexterm</xmlelement> elements can be
        used.</p><fig><title>Index reference to a point within in a topic</title>
        <p>When index entries are placed in the body of a topic, they serve as point references to
          their location in the topic.</p>
        <p>In the following code sample, the <xmlelement>indexterm</xmlelement> element provides a
          point reference to the beginning of the paragraph.</p>
        <codeblock>&lt;p>&lt;indexterm>databases&lt;/indexterm>Databases are used to ...&lt;/p></codeblock>
</fig>
      <fig>
        <title>Index entries within topic prologues or DITA maps</title>
        <p>When index entries are located within the <xmlelement>prolog</xmlelement> element in a
          topic or the <xmlelement>topicmeta</xmlelement> element in a DITA map, they serve as point
          references to the start of the topic title.</p>
        <p>In the following code sample, the <xmlelement>indexterm</xmlelement> element provides a
          reference to the topic as a whole; the generated index entry is associated with the start
          of the <xmlelement>title</xmlelement> element.</p>
        <codeblock>&lt;topic id="about-databases">
  &lt;title>About databases&lt;/title>
  &lt;prolog>
    &lt;metadata>
      &lt;keywords>
        &lt;indexterm>databases&lt;/indexterm>
      &lt;/keywords>
    &lt;/metadata>
  &lt;/prolog>
  &lt;body>
    &lt;!-- content... -->
  &lt;/body>
&lt;/topic></codeblock>
      </fig>
      <p>The effect is the same as if the <xmlelement>indexterm</xmlelement> element had been
        located in the map:</p>
      <codeblock>&lt;map>
  &lt;topicref href="aboutdatabases.dita">
    &lt;topicmeta>
      &lt;keywords>
        &lt;indexterm>databases&lt;/indexterm>
      &lt;/keywords>
    &lt;/topicmeta>
  &lt;/topicref>
  &lt;!-- ... -->
&lt;/map></codeblock><fig id="ranges"><title>A simple index range</title>
<p>A simple index range will look something like this:</p>
        <codeblock>&lt;indexterm start="cheese">cheese&lt;/indexterm>
&lt;!-- ... additional content -->
&lt;indexterm end="cheese"/></codeblock>
<p>This markup will generate a top-level index term for "cheese" that covers a series of pages, such
          as:</p>
        <lines>cheese 18-24</lines>
</fig>
      <fig>
        <title>A more complex index range</title>
        <p>Specifying a range for nested terms is similar. In this sample, the range is specified
          for the tertiary index entry "pecorino":</p>
        <codeblock>&lt;indexterm>cheese
  &lt;indexterm>sheeps milk
    &lt;indexterm start="level-3-pecorino">pecorino&lt;/indexterm>
  &lt;/indexterm>
&lt;/indexterm>
 &lt;!-- ... additional content ... -->
&lt;indexterm end="level-3-pecorino"/></codeblock>
        <!--<p>The generated index for that range would look something like this: </p><ul><li>cheese<ul><li>sheeps milk<ul><li>pecorino 18-24</li></ul></li></ul></li></ul>-->
      </fig></example>
</refbody>
</reference>

