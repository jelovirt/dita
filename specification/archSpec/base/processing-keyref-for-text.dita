<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en-us" id="processing-key-references">
    <title>Processing key references to generate text or link text</title>
    <shortdesc>Variable text can be specified by key definitions. Processors determine the effective
        text by retrieving the content of elements in a specific sequence.</shortdesc>
    <conbody>
        <dl>
            <dlentry>
                <dt>Empty elements</dt>
                <dd>
                    <p>Empty elements that specify a key reference might get their effective content
                        from the referenced key definitions. For the purpose of determining variable
                        text, <term>empty elements</term> are defined as elements that meet the
                        following criteria:</p>
                    <ul id="ul_ylq_w1w_bpb">
                        <li>Have no text content, including white space</li>
                        <li>Have no
                            sub-elements<!--<draft-comment author="robander" time="September 16 2014" disposition="historic">There is a recognized edge case that could confuse processors. What if my specialization has a required kid. For validity, I must include that kid. (Same issue tends to come up with conref on something like &lt;step> or &lt;table>). For example, if I have an image with required &lt;alt> child, to be valid it must be: &lt;myImage keyref="a">&lt;alt/>&lt;/myImage>. This can never be empty, thus can never pull the alt-text along with @href. <p>Not sure what the alternative is though. Originally considered text: "Have no sub-elements that contain text or result in text". But as Chris pointed out this is troublesome - how can a processor know if a child element will result in text? Will &lt;myData/> result in text? What if it results in text for PDF but not HTML - then does my effective content get pulled from the key for one and not the other? What if you have &lt;keyword> child with @conref, but @conref doesn't resolve or pulls nothing? In that case again we have something that may be empty now but resolve later. So, for now using the much simpler "no sub-elements" rule, while recognizing that the edge case exists.</p></draft-comment>--></li>
                        <li>Have no attributes that would be used as text content</li>
                    </ul>
                </dd>
            </dlentry>
            <dlentry>
                <dt>Key definitions with child <xmlelement>topicmeta</xmlelement> elements</dt>
                <dd>
                    <p>When an empty element references a key definition that has a child
                            <xmlelement>topicmeta</xmlelement> element, content from that
                            <xmlelement>topicmeta</xmlelement> element is used to determine the
                        effective content of the referencing element. Effective content from the key
                        definition becomes the element content, with the following exceptions: </p>
                    <ul id="ul_zlq_w1w_bpb">
                        <li>For empty <xmlelement>image</xmlelement> elements, the effective content
                            is used as alternate text. This is equivalent to creating an
                                <xmlelement>alt</xmlelement> sub-element to hold that content.</li>
                        <li>For empty <xmlelement>link</xmlelement> elements, the effective content
                            is used as link text. This is equivalent to creating a
                                <xmlelement>linktext</xmlelement> sub-element to hold that
                            content.</li>
                        <li>For empty <xmlelement>link</xmlelement> and
                                <xmlelement>xref</xmlelement> elements, a key definition can provide
                            a short description in addition to the normal effective content. If the
                            key definition includes <xmlelement>shortdesc</xmlelement> inside of
                                <xmlelement>topicmeta</xmlelement>, the content of the
                                <xmlelement>shortdesc</xmlelement> element also provides effective
                            content for a <xmlelement>desc</xmlelement> sub-element.</li>
                        <li>The <xmlelement>longdescref</xmlelement> and
                                <xmlelement>longquoteref</xmlelement> elements are empty elements
                            with no effective content. Key definitions do not set effective text for
                            these elements.</li>
                        <li>The <xmlelement>param</xmlelement> element does not have any effective
                            content, so key definitions do not result in effective content for
                                <xmlelement>param</xmlelement> elements.</li>
                    </ul>
                </dd>
            </dlentry>
            <dlentry>
                <dt>Processing rules</dt>
                <dd>
                    <p>Processors <term outputclass="RFC-2119">MUST</term> resolve variable text
                        that is defined using keys by using the following sequence:<ol
                            id="ol_amq_w1w_bpb">
                            <li>Effective text content is taken from the
                                    <xmlelement>keytext</xmlelement> element.</li>
                            <li>Effective text content is taken from the
                                    <xmlelement>titlealt</xmlelement> element with
                                    <xmlatt>title-role</xmlatt> set to
                                <keyword>linking</keyword>.</li>
                            <li>Effective text content is taken from the
                                    <xmlelement>titlealt</xmlelement> element with
                                    <xmlatt>title-role</xmlatt> set to
                                <keyword>navigation</keyword>.</li>
                            <li>Effective text content is taken from the
                                    <xmlelement>titlealt</xmlelement> element with
                                    <xmlatt>title-role</xmlatt> set to a processor-recognized
                                value.</li>
                            <li>Effective text content is taken from the title of the referenced
                                document, if available.</li>
                            <li>Effective text content is determined by the processor.</li>
                        </ol></p>
                </dd>
            </dlentry>
            <dlentry>
                <dt>Generalization of effective content</dt>
                <dd>
                    <p>When the effective content for a key reference element results in invalid
                        elements, those elements <term outputclass="RFC-2119">SHOULD</term> be
                        generalized to produce a valid result. </p>
                    <p>For example, <xmlelement>keytext</xmlelement> in the key definition might use
                        a domain specialization of <xmlelement>keyword</xmlelement> that is not
                        valid in the key reference context, in which case the specialized element is
                        generalized to <xmlelement>keyword</xmlelement>. If the generalized content
                        is also not valid, a text equivalent is used instead. For example,
                            <xmlelement>keytext</xmlelement> might include
                            <xmlelement>ph</xmlelement> or a specialized <xmlelement>ph</xmlelement>
                        in the key definition, but neither of those are valid as the effective
                        content for a <xmlelement>keyword</xmlelement>. In that case, the text
                        content of the <xmlelement>ph</xmlelement> is used.</p>
                </dd>
            </dlentry>
        </dl>
    </conbody>
</concept>
