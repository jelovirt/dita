<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en-us" id="relax-ng-element-domain-module-coding-requirements" >
 <title>RELAX NG: Coding requirements for element-domain modules</title>
 <shortdesc>Vocabulary modules that define element domains declare an extension pattern for each
    element that is extended by the domain. These patterns are used when including the domain module
    in document-type shells.</shortdesc>
 <conbody>
    <dl>
      <dlentry>
        <dt>Pattern name</dt>
        <dd>
          <p>The name of the pattern uses the following format, where <varname>shortName</varname>
            is the short name for the domain, and <varname>elementName</varname> is the name of the
            element that is extended:</p>
          <codeblock><codeph><varname>shortName</varname>-d-</codeph><varname>elementName</varname></codeblock>
        </dd>
      </dlentry>
      <dlentry>
        <dt>Pattern definition</dt>
        <dd>
          <p>The extension pattern consists of a choice group that contains references to
            element-type name patterns. Each extension of the base element type is referenced.</p>
          <div otherprops="examples">
            <p>For example, the following pattern extends the <xmlelement>ph</xmlelement> element
              type by adding the specializations of <xmlelement>ph</xmlelement> that are defined in
              the highlighting domain:</p>
            <codeblock>  &lt;define name="hi-d-ph">
    &lt;choice>
      &lt;ref name="b.element"/>
      &lt;ref name="i.element"/>
      &lt;ref name="sup.element"/>
      &lt;ref name="sub.element"/>
      &lt;ref name="tt.element"/>
      &lt;ref name="u.element"/>
    &lt;/choice>
  &lt;/define>
</codeblock>
          </div>
        </dd>
      </dlentry>
      <dlentry>
        <dt>Extension pattern</dt>
        <dd>
          <p>For each element type that is extended by the element-domain module, the module extends
            the element-type pattern with a <xmlatt>combine</xmlatt> value of
              <keyword>choice</keyword> that contains a reference to the domain pattern.</p>
          <div otherprops="examples">
            <p>For example, the following pattern adds the highlighting domain specializations of
              the <xmlelement>ph</xmlelement> element to the content model of the
                <xmlelement>ph</xmlelement> element:</p>
            <codeblock>  &lt;define name="ph" combine="choice">
    &lt;ref name="hi-d-ph"/>
  &lt;/define></codeblock>
          </div>
          <p>Because the pattern uses a <xmlatt>combine</xmlatt> value of <keyword>choice</keyword>,
            the effect is that the domain-provided elements automatically are automatically added to
            the effective content model of the extended element in any grammar that includes the
            domain module.</p>
        </dd>
      </dlentry>
    </dl>
 </conbody>
</concept>
