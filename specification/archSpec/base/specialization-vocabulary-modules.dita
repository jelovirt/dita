<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept
  id="vocabularymodules" xml:lang="en-us">
  <title>Vocabulary modules</title>
  <shortdesc>A DITA element type or attribute is declared in exactly one vocabulary
    module.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>definitions<indexterm>attribute domain modules</indexterm></indexterm>
        <indexterm>definitions<indexterm>element domain modules</indexterm></indexterm>
        <indexterm>definitions<indexterm>structural modules</indexterm></indexterm>
        <indexterm>naming conventions<indexterm>attribute domain modules</indexterm></indexterm>
        <indexterm>naming conventions<indexterm>element domain modules</indexterm></indexterm>
        <indexterm>naming conventions<indexterm>structural modules</indexterm></indexterm>
        <indexterm>terminology<indexterm>attribute domain modules</indexterm></indexterm>
        <indexterm>terminology<indexterm>element domain modules</indexterm></indexterm>
        <indexterm>terminology<indexterm>structural module</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <conbody>
    <p>The following terminology is used to refer to DITA vocabulary modules:</p>
    <dl>
      <dlentry>
        <dt>structural module</dt>
        <dd>A vocabulary module that defines a top-level map or topic type. Structural modules also
          can define specializations of, or reuse elements from, domain or other structural modules.
          When this happens, the structural module becomes dependent.</dd>
      </dlentry>
      <dlentry>
        <dt>element domain module</dt>
        <dd>A vocabulary module that defines one or more specialized element types that can be
          integrated with maps or topics.</dd>
      </dlentry>
      <dlentry>
        <dt>attribute domain module</dt>
        <dd>A vocabulary module that defines exactly one specialization of either the
            <xmlatt>base</xmlatt> or <xmlatt>props</xmlatt> attribute.</dd>
      </dlentry>
    </dl>
    <p>For structural types, the module name is typically the same as the root element. For example,
      "task" is the name of the structural vocabulary module whose root element is
        <xmlelement>task</xmlelement>.</p>
    <p>For element domain modules, the module name is typically a name that reflects the subject
      domain to which the domain applies, such as "highlight" or "software". Domain modules often
      have an associated short name, such as <keyword>hi-d</keyword> for the highlighting domain or
        <keyword>sw-d</keyword> for the software domain.</p>
    <p>The name (or short name) of an element domain module is used to identify the module in
        <xmlatt>class</xmlatt> attribute values. While module names need not be globally unique,
      module names must be unique within the scope of a given specialization hierarchy. The short
      name must be a valid XML name token. </p>
    <p>Structural modules based on topic <term outputclass="RFC-2119">MAY</term> define additional
      topic types that are then allowed to occur as subordinate topics within the top-level topic.
      However, such subordinate topic types <term outputclass="RFC-2119">MAY NOT</term> be used as
      the root elements of conforming DITA documents.</p>
    <p otherprops="examples">For example, a top-level topic type might require the use of
      subordinate topic types that would only ever be meaningful in the context of their containing
      type and thus would never be candidates for standalone authoring or aggregation using maps. In
      that case, the subordinate topic type can be declared in the module for the top-level topic
      type that uses it. However, in most cases, potential subordinate topics are best defined in
      their own vocabulary modules.</p>
    <p>Domain elements intended for use in topics <term outputclass="RFC-2119" 
        >MUST</term> ultimately be specialized from elements that are defined in the topic module.
      Domain elements intended for use in maps <term outputclass="RFC-2119" 
        >MUST</term> ultimately be specialized from elements defined by or used in the map module.
      Maps share some element types with topics but no map-specific elements can be used within
      topics.</p>
  </conbody>
</concept>
