<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en-us" id="relax-ng-constraint-module-coding-requirements" >
 <title>RELAX NG: Coding requirements for constraint modules</title>
 <shortdesc>A structural constraint module defines the constraints for a map or topic element type.
  A domain constraint module defines the constraints for an element or attribute domain.</shortdesc>
 <prolog>
  <metadata>
   <keywords>
    <indexterm>coding
          requirements<indexterm>RNG<indexterm>constraints</indexterm></indexterm></indexterm>
    <indexterm>constraints<indexterm>RNG<indexterm>coding
              requirements</indexterm><indexterm>integrating into document type
            shells</indexterm></indexterm></indexterm>
    <indexterm>domain constraint modules<indexterm>RNG<indexterm>coding
            requirements</indexterm></indexterm></indexterm>
    <indexterm>file names<indexterm>RNG<indexterm>domain constraint
              modules</indexterm><indexterm>structural constraint
          modules</indexterm></indexterm></indexterm>
    <indexterm>structural constraint modules<indexterm>RNG<indexterm>coding
            requirements</indexterm></indexterm></indexterm>
   </keywords>
  </metadata>
 </prolog>
 <conbody>
    <section>
      <title>Implementation of constraint modules</title>
      <p>Constraint modules are implemented by importing the constraint module into a document-type
        shell in place of the module that the constraint modifies. The constraint module itself
        imports the base module to be constrained; within the import, the module redefines the
        patterns as needed to implement the constraint.</p>
      <div otherprops="examples">
        <p>For example, a constraint module that modifies the <xmlelement>section</xmlelement>
          element imports the base module <filepath>topicMod.rng</filepath>. Within that import, it
          constrains the <codeph>section.content</codeph> pattern:</p>
        <codeblock>&lt;include href="topicMod.rng"&gt;
  &lt;define name="section.content"&gt;
    &lt;!-- Define constrained model here -->
  &lt;/define>
&lt;/include>
</codeblock>
        <p>For a more complete example, see <filepath>strictTaskbodyConstraintMod.rng</filepath>,
          delivered with the DITA 1.3 grammar files.</p>
        <draft-comment author="robander">Need to update the above example statement for 2.0 to refer
          to the correct name of the tech comm 2.0 spec.</draft-comment>
      </div>
    </section>
    <section>
      <title>Combining multiple constraints</title>
      <p>Because the constraint module imports the module that it modifies, only one constraint
        module can be used per vocabulary module (otherwise the module being constrained would be
        imported multiple times). If multiple constraints are combined for a single vocabulary
        module, they must be implemented in one of the following ways:</p>
      <dl>
        <dlentry>
          <dt>Combing constraints into a single module</dt>
          <dd>
            <p>The constraints can be combined into a single module.</p>
            <div otherprops="examples">
              <p>For example, when combining separate constraints for
                  <xmlelement>section</xmlelement> and <xmlelement>shortdesc</xmlelement>, a single
                module can be defined as follows:</p>
              <codeblock>&lt;include href="topicMod.rng"&gt;
  &lt;define name="section.content"&gt;
    &lt;!-- Constrained model for section -->
  &lt;/define>
  &lt;define name="shortdesc.content">
    &lt;!-- Constrained model for shortdesc -->
  &lt;/define>
&lt;/include>
</codeblock>
            </div>
          </dd>
        </dlentry>
        <dlentry>
          <dt>Chaining constraints</dt>
          <dd>
            <p>Constraints can be chained so that each constraint imports another, until the final
              constraint imports the base vocabulary module.</p>
            <div otherprops="examples">
              <p>For example, when combining separate constraints for
                  <xmlelement>section</xmlelement>, <xmlelement>shortdesc</xmlelement>, and
                  <xmlelement>li</xmlelement> from the base vocabulary, the
                  <xmlelement>section</xmlelement> constraint can import the
                  <xmlelement>shortdesc</xmlelement> constraint, which in turn imports the
                  <xmlelement>li</xmlelement> constraint, which finally imports
                  <filepath>topicMod.rng</filepath>.</p>
              <draft-comment author="Kristen J Eberlein" time="07 April 2021">
                <p>Need an example of this</p>
              </draft-comment>
            </div>
          </dd>
        </dlentry>
      </dl>
    </section>
 </conbody>
</concept>
