<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="merging-of-cascading-attributes">
    <title>Merging of cascading attributes</title>
    <shortdesc>The <xmlatt>cascade</xmlatt> attribute can be used to modify the additive nature of
        attribute cascading (though it does not turn off cascading altogether). The attribute has
        two predefined values: <keyword>merge</keyword> and <keyword>nomerge</keyword>.</shortdesc>
    <conbody>
        <dl conkeyref="reuse-general/cascade-values">
            <dlentry>
                <dt/>
                <dd/>
            </dlentry>
        </dl>
        <p conkeyref="reuse-general/attribute-implementation-tokens"/>
        <p>For example, a processor might define the token "appToken:audience" in order to specify
            cascading and merging behaviors for <b>only</b> the <xmlatt>audience</xmlatt>
            attribute.</p>
        <p>Tokens can apply to a set of attributes, specified as part of the
                <xmlatt>cascade</xmlatt> value. In that case, the syntax for specifying those values
            consists of the implementation-specific token, followed by a parenthetical group that
            uses the same syntax as groups within the <xmlatt>audience</xmlatt>,
                <xmlatt>platform</xmlatt>, <xmlatt>product</xmlatt>, and <xmlatt>otherprops</xmlatt>
            attributes. For example, a token that applies to only <xmlatt>platform</xmlatt> and
                <xmlatt>product</xmlatt> could be specified as
                <codeph>cascade="appname:token(platform product)"</codeph>.</p>
        <p>The predefined values for the <xmlatt>cascade</xmlatt> attribute <term
                outputclass="RFC-2119">MUST</term> precede any implementation-specific tokens, for
            example, <codeph>cascade="merge appToken:audience"</codeph>.</p>
        <example id="cascade-att-examples" otherprops="examples">
            <title>Example: The <xmlatt>cascade</xmlatt> attribute in use</title>
            <p>Consider the following code examples:</p>
            <fig id="mapA">
                <title>Map A</title>
                <codeblock>&lt;map audience="a b" cascade="merge">
     &lt;topicref href="topic.dita" audience="c"/>
&lt;/map>
</codeblock>
            </fig>
            <fig id="mapB">
                <title>Map B</title>
                <codeblock>&lt;map audience="a b" cascade="nomerge">
     &lt;topicref href="topic.dita" audience="c"/>
&lt;/map>
</codeblock>
            </fig>
            <p>For map A, the values for the attribute are merged, and the effective value of the
                    <xmlatt>audience</xmlatt> attribute for <filepath>topic.dita</filepath> is "a b
                c". For map B, the values for the attribute are not additive, and the effective
                value of the <xmlatt>audience</xmlatt> attribute for <filepath>topic.dita</filepath>
                is "c".</p>
            <p>In the following example, merging is active at the map level but turned off
                below:</p>
            <fig id="mapC">
                <title>Map C</title>
                <codeblock>&lt;map platform="a" product="x" cascade="merge">
  &lt;topicref href="one.dita" platform="b" product="y">
    &lt;topicref href="two.dita" cascade="nomerge" product="z"/>
  &lt;/topicref>
&lt;/map></codeblock>
            </fig>
            <p>In map C, the reference to <filepath>one.dita</filepath> has effective merged values
                of "a b" for <xmlatt>platform</xmlatt> and "x y" for <xmlatt>product</xmlatt>.</p>
            <p>The reference to <filepath>two.dita</filepath> turns off merging, so the explicit
                    <xmlatt>product</xmlatt> value of "z" is used (it does not merge with ancestor
                values). The <xmlatt>platform</xmlatt> attribute is not present, so the
                already-merged value of "a b" continues to cascade and is the effective value of
                    <xmlatt>platform</xmlatt> on this reference.</p>
        </example>
    </conbody>
</concept>
