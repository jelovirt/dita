<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en-us" id="concept_ycp_3jm_vp">
 <title>Constraint rules</title>
 <shortdesc>There are certain rules that apply to the design and implementation of
  constraints.</shortdesc>
 <prolog>
  <metadata>
   <keywords>
    <indexterm>constraints<indexterm>design and implementation rules</indexterm></indexterm>
   </keywords>
  </metadata>
 </prolog>
 <conbody>
  <dl>
   <dlentry>
    <dt>Content model</dt>
    <dd>
     <p>The content model for a constrained element must be at least as restrictive as the
      unconstrained content model for the element.
      <!--[Eberlein: 12 January 2015]: For example, a constraint for <xmlelement>note</xmlelement> might restrict the values for <xmlatt>type</xmlatt> but leave the content model unchanged.--></p>
     <p>The content model and attributes of an element can be constrained by only one constraint
      module. If two constraint modules exist that constrain the content model or attributes for a
      specific element, those two modules must be replaced with a new constraint module that
      reflects the aggregation of the two original constraint modules.</p>
    </dd>
   </dlentry>
   <dlentry>
    <dt>Domain constraints</dt>
    <dd>
     <p>When a domain module is integrated into a document-type shell, the base domain element can
      be omitted from the domain extension group or parameter entity. In such a case, there is no
      separate constraint declaration, because the content model is configured directly in the
      document-type shell.</p>
     <p >A domain module can be constrained by only one constraint module. This
      means that all restrictions for the extension elements that are defined in the domain must be
      contained within that one constraint module.</p>
    </dd>
   </dlentry>
   <dlentry>
    <dt>Structural constraints</dt>
    <dd>
     <p>Each constraint module can constrain elements from only one vocabulary module. For example,
      a single constraint module that constrains <xmlelement>refsyn</xmlelement> from
       <filepath>reference.mod</filepath> and constrains <xmlelement>context</xmlelement> from
       <filepath>task.mod</filepath> is not allowed. This rule maintains granularity of reuse at the
      module level.</p>
     <p>Constraint modules that restrict different elements from within the same vocabulary module
      can be combined with one another. Such combinations of constraints on a single vocabulary
      module have no meaningful order or precedence.</p>
    </dd>
   </dlentry>
  </dl>
 </conbody>
</concept>
